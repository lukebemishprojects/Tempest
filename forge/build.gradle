plugins {
    id 'convention.consumer'
    alias libs.plugins.curseforgegradle
    alias libs.plugins.minotaur
    alias libs.plugins.architectury.loom
}

loom {
    mixin {
        defaultRefmapName.set "tempest.refmap.json"
    }
    runs {
        client {
            ideConfigGenerated(true)
        }
        server {
            ideConfigGenerated(true)
        }
    }
    forge {
        mixinConfig "mixin.tempest.json", "mixin.forge.tempest.json"
    }
}

repositories {
    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    minecraft libs.minecraft
    forge libs.forge
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
    }

    compileOnly libs.autoservice
    annotationProcessor libs.autoservice

    implementation libs.mixinextras.common
    annotationProcessor libs.mixinextras.common
    implementation libs.mixinextras.forge
    include libs.mixinextras.forge

    // Compat

    modCompileOnly libs.embeddium
    //modLocalRuntime libs.embeddium

    modCompileOnly libs.snowrealmagic.forge
}

// Publishing

import net.darkhax.curseforgegradle.TaskPublishCurseForge

if (System.getenv('CURSEFORGE_KEY')) {
    tasks.register('curseforge', TaskPublishCurseForge) {
        disableVersionDetection()
        apiToken = System.getenv('CURSEFORGE_KEY')
        def projectId = '948439'
        def mainFile = upload(projectId, tasks.remapJar)
        mainFile.displayName = "Tempest [Forge] v$project.version"
        mainFile.releaseType = "${project.release_type}"
        mainFile.addModLoader('Forge')
        mainFile.addGameVersion("${libs.versions.minecraft.get()}")
        mainFile.changelog = ''
    }

    afterEvaluate {
        tasks.curseforge.dependsOn tasks.remapJar
    }
}

if (System.getenv('MODRINTH_KEY')) {
    modrinth {
        token = System.getenv('MODRINTH_KEY')
        projectId = 'YuZD6Tkx'
        versionNumber = "$project.version"
        versionType = "${project.release_type}"
        detectLoaders = false
        uploadFile = remapJar
        gameVersions = ["${libs.versions.minecraft.get()}"]
        loaders = ['forge']
    }
}
