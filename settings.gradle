pluginManagement {
    repositories {
        mavenCentral()
        gradlePluginPortal()

        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }

        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/'
        }

        maven {
            name = "Luke's Maven"
            url = 'https://maven.lukebemish.dev/releases'
        }

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name = 'Architectury'
            url "https://maven.architectury.dev/"
        }
    }
}

plugins {
    id 'com.gradle.enterprise' version '3.16.1'
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.7.0'
}

gradleEnterprise {
    if (System.getenv('CI') != null) {
        buildScan {
            publishAlways()
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
        }
    }
}

rootProject.name = 'tempest'
include("common", "forge", "fabriquilt")

buildCache {
    if (providers.gradleProperty('buildCacheUrl').orNull) {
        remote(HttpBuildCache) {
            url = providers.gradleProperty('buildCacheUrl').orNull
            credentials {
                username = providers.gradleProperty('buildCacheUser').orNull
                password = providers.gradleProperty('buildCachePassword').orNull
            }
            if (providers.gradleProperty('buildCachePush').orNull) {
                push = true
            } else {
                push = false
            }
        }
    } else if (System.getenv('BUILD_CACHE_URL')) {
        remote(HttpBuildCache) {
            url = System.getenv('BUILD_CACHE_URL')
            credentials {
                username = System.getenv('BUILD_CACHE_USER')
                password = System.getenv('BUILD_CACHE_PASSWORD')
            }
            if (System.getenv('BUILD_CACHE_PUSH') || System.getenv('CI')) {
                push = true
            } else {
                push = false
            }
        }
    }
}
